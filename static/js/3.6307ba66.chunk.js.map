{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","headerImg","className","s","descriptionBlock","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreater","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","WithUrlDataContainerComponent","withRouter","compose","auth","isAuth"],"mappings":"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","file":"static/js/3.6307ba66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__19USN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3kSlb\",\"posts\":\"MyPosts_posts__2DQNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2noyt\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport headerImg from '../../../assets/images/header.jpg';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={headerImg} />\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                {/*<img src={profile.photos.large}/>*/}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../../../utils/validators/validators\";\r\nimport Textarea from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreater(10);\r\n\r\nfunction AddNewPostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder=\"post message\" validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from 'react-redux';\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus})\r\n)(WithUrlDataContainerComponent);"],"sourceRoot":""}