{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.gif","assets/images/header.jpg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreate","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","setCurrentPage","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","hasError","formControl","restProps","child","placeholder","validators","component","text","validate","Textarea","backgroundColor","preloader","value","maxLengthCreater","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.cb0466ed.chunk.js","sourcesContent":["import * as axios from \"axios/index\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8062c620-0b06-48e0-88ec-b2732\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    follow(userId = 1) {\r\n        return instance.post(`follow/${userId}`, {});\r\n    },\r\n    unfollow(userId = 1){\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sergey'},\r\n        {id: 2, name: 'Sergey1'},\r\n        {id: 3, name: 'Sergey2'},\r\n        {id: 4, name: 'Sergey3'},\r\n        {id: 5, name: 'Sergey4'},\r\n        {id: 6, name: 'Sergey5'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'hi'},\r\n        {id: 2, message: 'hi2'},\r\n        {id: 3, message: 'hi3'},\r\n        {id: 4, message: 'hi4'},\r\n        {id: 5, message: 'hi5'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreate = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2qPG0\"};","module.exports = __webpack_public_path__ + \"static/media/user.b3e90dfe.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.24f97216.gif\";","module.exports = __webpack_public_path__ + \"static/media/header.44bdc77b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2N0YV\",\"item\":\"Navbar_item__3bsNT\",\"activeLink\":\"Navbar_activeLink__1YfIt\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {...state, followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1)}}>PREVIOS</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })\r\n        }\r\n        { portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)} }>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                     className={styles.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                           {user.followed\r\n                               ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                         onClick={() => unfollow(user.id)}>Unfollow</button>\r\n                               : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                         onClick={() => follow(user.id)}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div>{\"u.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                   onPageChanged={onPageChanged}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u} followingInProgress={props.followingInProgress}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow} key={u.id}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => users.filter(u => true))\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching, toggleFollowingProgress, follow, unfollow, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let pageSize = this.props.pageSize;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null }\r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                      toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                      followingInProgress={this.props.followingInProgress}\r\n        />\r\n            </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n        toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport headerImage from '../../assets/images/header.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        {/*<img src={headerImage} />*/}\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from 'react-redux';\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {\r\n                error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login' //unique name\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","const sidebarReducer = (state, action) => {\r\n\r\n    return {...state};\r\n}\r\n\r\nexport default sidebarReducer;","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/login' render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(\n    <SamuraiJSApp/>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/> {text}\r\n    </div>\r\n)\r\n\r\nexport default Textarea;","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={{backgroundColor: 'white'}}><img src={preloader}/></div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__23c6O\",\"error\":\"FormsControls_error__2K6P7\",\"formSummaryError\":\"FormsControls_formSummaryError__2at4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__19pK7\",\"selectedPage\":\"Paginator_selectedPage__1xvYD\",\"paginator\":\"Paginator_paginator__YXsAR\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreater = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Hb1p\",\"loginBlock\":\"Header_loginBlock__2gkOe\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi', likesCount: 12},\r\n        {id: 2, message: 'Hello', likesCount: 22},\r\n        {id: 3, message: 'How', likesCount: 32},\r\n        {id: 4, message: 'Are', likesCount: 2},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}